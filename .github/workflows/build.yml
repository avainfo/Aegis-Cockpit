name: CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      QT_QPA_PLATFORM: offscreen
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
      CCACHE_DIR: ~/.cache/ccache
      CMAKE_BUILD_PARALLEL_LEVEL: 4

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake ninja-build ccache \
            qt6-base-dev qt6-base-dev-tools \
            qt6-quick3d-dev qt6-shadertools-dev \
            qt6-declarative-dev qt6-tools-dev qt6-tools-dev-tools \
            qml6-module-qtquick qml6-module-qtquick-window \
            qml6-module-qtquick-controls \
            libgtest-dev clang cppcheck \
            mesa-utils libgl1-mesa-dri libopengl0 mesa-vulkan-drivers

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ccache
          key: ccache-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ github.ref }}
            ccache-${{ runner.os }}

      - name: Verify dependencies
        run: |
          chmod +x scripts/verify.sh
          ./scripts/verify.sh

      - name: Build GoogleTest (system source)
        run: |
          cd /usr/src/gtest
          sudo cmake -B build .
          sudo cmake --build build -j$(nproc)
          sudo cp build/lib/*.a /usr/lib

      - name: Configure CMake (Release + ccache + Ninja)
        run: |
          ccache --zero-stats || true
          ccache --max-size=2G || true
          cmake -B build -S . -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

      - name: Build
        run: cmake --build build --config Release

      - name: Run tests
        run: ctest --test-dir build --output-on-failure --build-config Release

      - name: Static analysis (cppcheck)
        run: |
          cppcheck --std=c++23 --enable=warning,style,performance,portability \
                   --inline-suppr --suppress=missingIncludeSystem \
                   -i build . || true

      - name: Show ccache stats
        if: always()
        run: ccache --show-stats || true

      - name: Collect logs on failure
        if: failure()
        run: |
          mkdir -p ci-logs
          if [ -d build/Testing/Temporary ]; then
            cp -r build/Testing/Temporary ci-logs/ctest-temp || true
          fi
          find build -maxdepth 2 -name "*.log" -exec cp {} ci-logs/ \; || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-build
          path: |
            build/**
            ci-logs/**
          retention-days: 7
